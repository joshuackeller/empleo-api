// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DANGEROUS_DATABASE_URL")
}

model Organization {
  id         String   @id
  title      String
  admins     Admin[]
  users      User[]
  // image_id   String?
  // image      Image?   @relation(fields: [image_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("organization")
}

model Admin {
  id              String         @id
  first_name      String
  last_name       String?
  email           String         @unique
  email_confirmed Boolean        @default(false)
  self_created    Boolean        @default(false)
  password        Password?
  organizations   Organization[]
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt

  @@map("admin")
}

model User {
  id              String         @id
  first_name      String
  last_name       String?
  email           String         @unique
  email_confirmed Boolean        @default(false)
  password        Password?
  organizations   Organization[]
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt

  @@map("user")
}

model Password {
  id       String  @id
  admin_id String? @unique
  admin    Admin?  @relation(fields: [admin_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  user_id  String? @unique
  user     User?   @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  hash     String

  @@map("password")
}

// model Image {
//   id              String   @id
//   organization_id String
//   url             String
//   created_at      DateTime @default(now())
//   updated_at      DateTime @updatedAt

//   organization Organization[]

//   @@unique([organization_id, id])
//   @@map("image")
// }
